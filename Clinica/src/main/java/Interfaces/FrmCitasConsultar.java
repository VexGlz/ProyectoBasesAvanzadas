/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Dao.CitaDAO;
import Dao.DoctorDAO;
import Dao.PacienteDAO;
import java.awt.Menu;
import static java.lang.System.exit;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import modelo.Cita;
import modelo.Doctor;
import modelo.Paciente;

/**
 *
 * @author Josel
 */
public class FrmCitasConsultar extends javax.swing.JFrame {

    PacienteDAO dao = new PacienteDAO();
    CitaDAO daoc = new CitaDAO();

    public FrmCitasConsultar() {
        initComponents();
        List<Paciente> pacientes = dao.listar();

        for (Paciente p : pacientes) {
            cbPaciente.addItem(p);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        btnConsultarCitas = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbPaciente = new javax.swing.JComboBox();
        panel = new javax.swing.JScrollPane();
        TbCitas = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        btnConsultarCitas.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnConsultarCitas.setText("Consultar citas");
        btnConsultarCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarCitasActionPerformed(evt);
            }
        });

        btnMenu.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnMenu.setText("Menu ");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("Consulta Cita");

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel3.setText("Paciente:");

        cbPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPacienteActionPerformed(evt);
            }
        });

        TbCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        panel.setViewportView(TbCitas);

        btnEliminar.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnActualizar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnEliminar)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(btnMenu)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnConsultarCitas)
                                        .addGap(9, 9, 9))))
                            .addComponent(jLabel1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConsultarCitas))
                        .addGap(31, 31, 31)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(btnActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMenu))
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnConsultarCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarCitasActionPerformed
        Paciente seleccionado = (Paciente) cbPaciente.getSelectedItem();
        actualizarTablaCitas(seleccionado.getId());

    }//GEN-LAST:event_btnConsultarCitasActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        DaoMenuPrincipal menu = new DaoMenuPrincipal();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnMenuActionPerformed

    private void cbPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPacienteActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int fila = TbCitas.getSelectedRow();

        if (fila == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor selecciona una cita de la tabla.");
            return;
        }

        int idCita = (int) TbCitas.getValueAt(fila, 0);

        int confirmacion = javax.swing.JOptionPane.showConfirmDialog(
                this,
                "¿Seguro que quieres eliminar esta cita?",
                "Confirmar eliminación",
                javax.swing.JOptionPane.YES_NO_OPTION
        );

        if (confirmacion == javax.swing.JOptionPane.YES_OPTION) {
            CitaDAO dao = new CitaDAO();
            dao.eliminar(idCita);

            javax.swing.JOptionPane.showMessageDialog(this, "Cita eliminada correctamente.");

            Paciente seleccionado = (Paciente) cbPaciente.getSelectedItem();
            if (seleccionado != null) {
                actualizarTablaCitas(seleccionado.getId());
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int fila = TbCitas.getSelectedRow();

        if (fila == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor selecciona una cita de la tabla.");
            return;
        }

        try {
            int idCita = (int) TbCitas.getValueAt(fila, 0);

            String pacienteNombre = (String) TbCitas.getValueAt(fila, 1);
            String doctorNombre = (String) TbCitas.getValueAt(fila, 2);
            String fecha = (String) TbCitas.getValueAt(fila, 3);
            String motivo = (String) TbCitas.getValueAt(fila, 4);
            String estado = (String) TbCitas.getValueAt(fila, 5);

            Paciente p = dao.listar().stream()
                    .filter(pa -> (pa.getNombre() + " " + pa.getApellido()).equals(pacienteNombre))
                    .findFirst()
                    .orElse(null);

            Doctor d = new DoctorDAO().listar().stream()
                    .filter(dr -> (dr.getNombre() + " " + dr.getApellido()).equals(doctorNombre))
                    .findFirst()
                    .orElse(null);

            if (p == null || d == null) {
                javax.swing.JOptionPane.showMessageDialog(this, "Paciente o Doctor no encontrado.");
                return;
            }

            Cita c = new Cita();
            c.setId(idCita);
            c.setPaciente(p);
            c.setDoctor(d);
            c.setFecha(fecha);
            c.setMotivo(motivo);
            c.setEstado(estado);

            daoc.actualizar(c);

            javax.swing.JOptionPane.showMessageDialog(this, "Cita actualizada correctamente.");

            Paciente seleccionado = (Paciente) cbPaciente.getSelectedItem();
            if (seleccionado != null) {
                actualizarTablaCitas(seleccionado.getId());
            }

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al actualizar cita: " + e.getMessage());
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    private void actualizarTablaCitas(int idPaciente) {
        List<Cita> citas = daoc.listarPorPaciente(idPaciente);

        DefaultTableModel modelo = new DefaultTableModel(
                new Object[]{"ID", "Paciente", "Doctor", "Fecha", "Motivo", "Estado"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column != 0 && column != 1 && column != 2;

            }
        };

        for (Cita c : citas) {
            modelo.addRow(new Object[]{
                c.getId(),
                c.getPaciente().getNombre() + " " + c.getPaciente().getApellido(),
                c.getDoctor().getNombre() + " " + c.getDoctor().getApellido(),
                c.getFecha(),
                c.getMotivo(),
                c.getEstado()
            });
        }

        TbCitas.setModel(modelo);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbCitas;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnConsultarCitas;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JComboBox cbPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JScrollPane panel;
    // End of variables declaration//GEN-END:variables
}
